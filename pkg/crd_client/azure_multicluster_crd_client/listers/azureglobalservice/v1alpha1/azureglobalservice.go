/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/Azure/application-gateway-kubernetes-ingress/pkg/apis/azureglobalservice/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AzureGlobalServiceLister helps list AzureGlobalServices.
// All objects returned here must be treated as read-only.
type AzureGlobalServiceLister interface {
	// List lists all AzureGlobalServices in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AzureGlobalService, err error)
	// AzureGlobalServices returns an object that can list and get AzureGlobalServices.
	AzureGlobalServices(namespace string) AzureGlobalServiceNamespaceLister
	AzureGlobalServiceListerExpansion
}

// azureGlobalServiceLister implements the AzureGlobalServiceLister interface.
type azureGlobalServiceLister struct {
	indexer cache.Indexer
}

// NewAzureGlobalServiceLister returns a new AzureGlobalServiceLister.
func NewAzureGlobalServiceLister(indexer cache.Indexer) AzureGlobalServiceLister {
	return &azureGlobalServiceLister{indexer: indexer}
}

// List lists all AzureGlobalServices in the indexer.
func (s *azureGlobalServiceLister) List(selector labels.Selector) (ret []*v1alpha1.AzureGlobalService, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AzureGlobalService))
	})
	return ret, err
}

// AzureGlobalServices returns an object that can list and get AzureGlobalServices.
func (s *azureGlobalServiceLister) AzureGlobalServices(namespace string) AzureGlobalServiceNamespaceLister {
	return azureGlobalServiceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AzureGlobalServiceNamespaceLister helps list and get AzureGlobalServices.
// All objects returned here must be treated as read-only.
type AzureGlobalServiceNamespaceLister interface {
	// List lists all AzureGlobalServices in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AzureGlobalService, err error)
	// Get retrieves the AzureGlobalService from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AzureGlobalService, error)
	AzureGlobalServiceNamespaceListerExpansion
}

// azureGlobalServiceNamespaceLister implements the AzureGlobalServiceNamespaceLister
// interface.
type azureGlobalServiceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AzureGlobalServices in the indexer for a given namespace.
func (s azureGlobalServiceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AzureGlobalService, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AzureGlobalService))
	})
	return ret, err
}

// Get retrieves the AzureGlobalService from the indexer for a given namespace and name.
func (s azureGlobalServiceNamespaceLister) Get(name string) (*v1alpha1.AzureGlobalService, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("azureglobalservice"), name)
	}
	return obj.(*v1alpha1.AzureGlobalService), nil
}
