/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/Azure/application-gateway-kubernetes-ingress/pkg/apis/azureglobalservice/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GlobalServiceLister helps list GlobalServices.
// All objects returned here must be treated as read-only.
type GlobalServiceLister interface {
	// List lists all GlobalServices in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GlobalService, err error)
	// GlobalServices returns an object that can list and get GlobalServices.
	GlobalServices(namespace string) GlobalServiceNamespaceLister
	GlobalServiceListerExpansion
}

// globalServiceLister implements the GlobalServiceLister interface.
type globalServiceLister struct {
	indexer cache.Indexer
}

// NewGlobalServiceLister returns a new GlobalServiceLister.
func NewGlobalServiceLister(indexer cache.Indexer) GlobalServiceLister {
	return &globalServiceLister{indexer: indexer}
}

// List lists all GlobalServices in the indexer.
func (s *globalServiceLister) List(selector labels.Selector) (ret []*v1alpha1.GlobalService, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GlobalService))
	})
	return ret, err
}

// GlobalServices returns an object that can list and get GlobalServices.
func (s *globalServiceLister) GlobalServices(namespace string) GlobalServiceNamespaceLister {
	return globalServiceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GlobalServiceNamespaceLister helps list and get GlobalServices.
// All objects returned here must be treated as read-only.
type GlobalServiceNamespaceLister interface {
	// List lists all GlobalServices in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GlobalService, err error)
	// Get retrieves the GlobalService from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.GlobalService, error)
	GlobalServiceNamespaceListerExpansion
}

// globalServiceNamespaceLister implements the GlobalServiceNamespaceLister
// interface.
type globalServiceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GlobalServices in the indexer for a given namespace.
func (s globalServiceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GlobalService, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GlobalService))
	})
	return ret, err
}

// Get retrieves the GlobalService from the indexer for a given namespace and name.
func (s globalServiceNamespaceLister) Get(name string) (*v1alpha1.GlobalService, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("globalservice"), name)
	}
	return obj.(*v1alpha1.GlobalService), nil
}
